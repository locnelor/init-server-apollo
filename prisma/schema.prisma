// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model sys_user {
  id         Int        @id @default(autoincrement())
  createAt   DateTime   @default(now())
  updateAt   DateTime   @default(now()) @updatedAt
  hash_key   String     @unique
  account    String     @unique
  name       String
  loginIp    String?
  password   String
  role       sys_role   @relation(fields: [sys_roleId], references: [id])
  sys_roleId Int
  sys_task   sys_task[]
  status     Boolean    @default(false)
}

model sys_menu {
  id               Int                @id @default(autoincrement())
  createAt         DateTime           @default(now())
  updateAt         DateTime           @default(now()) @updatedAt
  name             String
  path             String             @unique
  role             Int
  comment          String?            @db.LongText
  parent           sys_menu?          @relation("SysMenuParent", fields: [parentId], references: [id])
  parentId         Int?
  children         sys_menu[]         @relation("SysMenuParent")
  sys_menu_on_role sys_menu_on_role[]
  visible          Boolean            @default(false)
}

model sys_menu_on_role {
  role       sys_role @relation(fields: [sys_roleId], references: [id])
  sys_roleId Int
  menu       sys_menu @relation(fields: [sys_menuId], references: [id])
  sys_menuId Int

  @@id([sys_roleId, sys_menuId])
}

model sys_role {
  id               Int                @id @default(autoincrement())
  createAt         DateTime           @default(now())
  updateAt         DateTime           @default(now()) @updatedAt
  name             String             @unique
  sort             Int                @default(0)
  status           Boolean            @default(true)
  comment          String?            @db.LongText
  sys_menu_on_role sys_menu_on_role[]
  sys_user         sys_user[]
}

//题目
model sys_question {
  id                    Int                     @id @default(autoincrement())
  createAt              DateTime                @default(now())
  updateAt              DateTime                @default(now()) @updatedAt
  answers               sys_answer[]
  sys_task_item         sys_task_item[]
  top                   sys_video?              @relation("TopRelation", fields: [top_id], references: [id])
  top_id                Int?                    @unique
  ass                   sys_video?              @relation("AssRelation", fields: [ass_id], references: [id])
  ass_id                Int?                    @unique
  sys_question_on_photo sys_question_on_photo[]
}

enum VideoStatus {
  LOADING
  ERROR
  FINISH
}

//视频
model sys_video {
  id       Int         @id @default(autoincrement())
  createAt DateTime    @default(now())
  updateAt DateTime    @default(now()) @updatedAt
  hash_key String      @unique
  size     Int
  status   VideoStatus @default(LOADING)

  questionTop sys_question? @relation("TopRelation")
  questionAss sys_question? @relation("AssRelation")
}

model sys_question_on_photo {
  photo    sys_photo    @relation(fields: [sys_photoId], references: [id])
  question sys_question @relation(fields: [sys_questionId], references: [id])

  sys_photoId    Int
  sys_questionId Int

  @@id([sys_photoId, sys_questionId])
}

//题目的答案
model sys_answer {
  id             Int           @id @default(autoincrement())
  sys_question   sys_question? @relation(fields: [sys_questionId], references: [id])
  sys_questionId Int?
  photo          sys_photo?    @relation(fields: [sys_photoId], references: [id])
  sys_photoId    Int?
  type           Int           @default(0)
  total          Int           @default(0)
}

//图片
model sys_photo {
  id                    Int                     @id @default(autoincrement())
  createAt              DateTime                @default(now())
  updateAt              DateTime                @default(now()) @updatedAt
  hash_key              String                  @unique
  sys_question_on_photo sys_question_on_photo[]
  sys_task_item_answer  sys_task_item_answer[]
  sys_answer            sys_answer[]
}

//用户答题
model sys_task {
  id            Int             @id @default(autoincrement())
  createAt      DateTime        @default(now())
  updateAt      DateTime        @default(now()) @updatedAt
  user          sys_user        @relation(fields: [sys_userId], references: [id])
  sys_userId    Int
  sys_task_item sys_task_item[]
  corrects      Int
}

//答题记录，一个题目仅能够答题一次
model sys_task_item {
  id             Int                    @id @default(autoincrement())
  createAt       DateTime               @default(now())
  updateAt       DateTime               @default(now()) @updatedAt
  task           sys_task               @relation(fields: [sys_taskId], references: [id])
  sys_taskId     Int
  question       sys_question           @relation(fields: [sys_questionId], references: [id])
  sys_questionId Int
  correct        Boolean
  answers        sys_task_item_answer[]

  @@unique([sys_taskId, sys_questionId])
}

model sys_task_item_answer {
  id              Int            @id @default(autoincrement())
  sys_task_item   sys_task_item? @relation(fields: [sys_task_itemId], references: [id])
  sys_task_itemId Int?
  photo           sys_photo      @relation(fields: [sys_photoId], references: [id])
  sys_photoId     Int
}
